// Generated by CoffeeScript 1.6.2
(function() {
  var RedisSessions, app, express, rs;

  RedisSessions = require("redis-sessions");

  rs = new RedisSessions();

  express = require('express');

  app = express();

  app.use(function(req, res, next) {
    res.header('Content-Type', "application/json");
    res.removeHeader("X-Powered-By");
    next();
  });

  app.configure(function() {
    app.use(express.logger("dev"));
    return app.use(express.bodyParser());
  });

  app.get('/:app/activity', function(req, res) {
    rs.activity({
      app: req.params.app,
      dt: req.param("dt")
    }, function(err, resp) {
      if (err) {
        res.send(err, 500);
        return;
      }
      res.send(resp);
    });
  });

  app.post('/:app/create/:id', function(req, res) {
    rs.create({
      app: req.params.app,
      id: req.params.id,
      ttl: req.param('ttl'),
      ip: req.param('ip')
    }, function(err, resp) {
      if (err) {
        res.send(err, 500);
        return;
      }
      res.send(resp);
    });
  });

  app.get('/:app/get/:token', function(req, res) {
    rs.get({
      app: req.params.app,
      token: req.params.token
    }, function(err, resp) {
      if (err) {
        res.send(err, 500);
        return;
      }
      res.send(resp);
    });
  });

  app["delete"]('/:app/killall', function(req, res) {
    return rs.killall({
      app: req.params.app
    }, function(err, resp) {
      if (err) {
        res.send(err, 500);
        return;
      }
      res.send(resp);
    });
  });

  app.post('/:app/set/:token', function(req, res) {
    rs.set({
      app: req.params.app,
      token: req.params.token,
      d: req.body
    }, function(err, resp) {
      if (err) {
        res.send(err, 500);
        return;
      }
      res.send(resp);
    });
    return;
  });

  module.exports = app;

}).call(this);
